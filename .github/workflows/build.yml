name: "CI/CD"
on:
    workflow_dispatch: # Allows manual triggering via GitHub UI
    push:
        branches:
            - master
    pull_request:
        paths-ignore:
            - '.txt'
            - 'LICENSE'
            - 'docs/**'
        branches: [ master ]

jobs:
    pre-commit:
        name: Pre-commit check
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout git repository
                uses: actions/checkout@v4.1.6
            -   name: Setup python
                uses: actions/setup-python@v5
                with:
                    python-version: "3.9"
            -   uses: actions/setup-java@v4
                with:
                    distribution: 'temurin'
                    java-version: '21'
            -   name: Pre-commit checks
                uses: pre-commit/action@v3.0.1
            -   name: pre-commit-ci-lite
                uses: pre-commit-ci/lite-action@v1.1.0
                if: always()
    build:
        runs-on: ubuntu-latest
        needs: [ pre-commit ]
        steps:
            -   uses: actions/checkout@v4.1.6
            -   name: Set up JDK 21
                uses: actions/setup-java@v4.2.1
                with:
                    distribution: 'temurin'
                    java-version: 21
                    architecture: x64
                    cache: 'maven'
            -   name: Build with Maven
                run: mvn --no-transfer-progress verify

            # Set up Docker Buildx
            -   name: Set up Docker Buildx
                uses: docker/setup-buildx-action@v2

            # Log in to DockerHub
            -   name: Log in to DockerHub
                uses: docker/login-action@v2
                with:
                    username: ${{ secrets.DOCKERHUB_USERNAME }}
                    password: ${{ secrets.DOCKERHUB_TOKEN }}

            # Build the Docker image
            -   name: Build Docker Image
                run: |
                    docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/log8100-projet:latest .

            # Push the Docker image to DockerHub
            -   name: Push Docker Image
                run: |
                    docker push ${{ secrets.DOCKERHUB_USERNAME }}/log8100-projet:latest
